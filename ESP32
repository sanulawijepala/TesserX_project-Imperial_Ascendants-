#define BLYNK_TEMPLATE_ID "TMPL6UDuEEOSD"
#define BLYNK_TEMPLATE_NAME "Weather Monitoring System"
#define BLYNK_AUTH_TOKEN "l0EB5AHY6LT-qT9hedz53V86PwvWSElD"
#define ubject 25;
#define ata 26;

#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <DHT.h>

// Blynk & WiFi
char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "Sulo";
char pass[] = "12345678";
int ubject_array[4] = [10 , 20 , 30 , 40 , 50];//subject of the conversation with the UNO
int ata_array[4];//the conversation

// Sensors
#define DHTPIN 4
#define DHTTYPE DHT11
#define SOIL_MOISTURE_PIN 34
#define LDR_PIN 35

DHT dht(DHTPIN, DHTTYPE);

void setup() {
  pinMode(ubject , OUTPUT);
  pinMode(ata , OUTPUT);
  Blynk.begin(auth, ssid, pass);
  dht.begin();
}

void loop() {
  Blynk.run();
  
  // Read sensors
  int water_level ;
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();
  int soilMoisture = map(analogRead(SOIL_MOISTURE_PIN), 0, 4095, 0, 100);
  int lightLevel = analogRead(LDR_PIN);

  ata_array[0] = water_level;
  ata_array[1] = (int)humidity ;
  ata_array[2] = (int)temperature ; 
  ata_array[3] = soilMoisture ;
  ata_array[4] = lightLevel ;

  for(int i ; i >= 4 ; i++){
    
    dacWrite(ubject , ubjct_array[i]);// do this to the rest of the outputs
    dacWrite(ata , (int)ata_array[i]);
  }

  // Send to Blynk
  Blynk.virtualWrite(V0, humidity);
  Blynk.virtualWrite(V1, temperature);
  Blynk.virtualWrite(V2, soilMoisture);
  Blynk.virtualWrite(V3, lightLevel);

  // Send alerts to UNO (format: "SOIL_ALERT" or "HUMIDITY_ALERT")
  if (soilMoisture < 30) {
    Serial.println("SOIL_ALERT");
    Blynk.logEvent("dry_soil");
  }
  if (humidity < 30) {
    Serial.println("HUMIDITY_ALERT");
    Blynk.logEvent("low_humidity");
  }

  delay(2000);
}
